package com.yhl.cloud.generator.common.model;

import com.yhl.cloud.generator.entity.BaseEntity;

import java.io.Serializable;
import java.util.List;

public class HdBookmark extends BaseEntity implements Serializable {

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column hd_bookmark.bookmark
     *
     * @mbg.generated
     */
    private List<BookmarkDict> bookmark;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table hd_bookmark
     *
     * @mbg.generated
     */
    private static final long serialVersionUID = 1L;


    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column hd_bookmark.bookmark
     *
     * @return the value of hd_bookmark.bookmark
     * @mbg.generated
     */
    public List<BookmarkDict> getBookmark() {
        return bookmark;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column hd_bookmark.bookmark
     *
     * @param bookmark the value for hd_bookmark.bookmark
     * @mbg.generated
     */
    public void setBookmark(List<BookmarkDict> bookmark) {
        this.bookmark = bookmark;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hd_bookmark
     *
     * @mbg.generated
     */
    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        HdBookmark other = (HdBookmark) that;
        return (this.getId() == null ? other.getId() == null : this.getId().equals(other.getId()))
                && (this.getCreateBy() == null ? other.getCreateBy() == null : this.getCreateBy().equals(other.getCreateBy()))
                && (this.getCreateDate() == null ? other.getCreateDate() == null : this.getCreateDate().equals(other.getCreateDate()))
                && (this.getUpdateBy() == null ? other.getUpdateBy() == null : this.getUpdateBy().equals(other.getUpdateBy()))
                && (this.getUpdateDate() == null ? other.getUpdateDate() == null : this.getUpdateDate().equals(other.getUpdateDate()))
                && (this.getDeleteFlag() == null ? other.getDeleteFlag() == null : this.getDeleteFlag().equals(other.getDeleteFlag()))
                && (this.getBookmark() == null ? other.getBookmark() == null : this.getBookmark().equals(other.getBookmark()));
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hd_bookmark
     *
     * @mbg.generated
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
        result = prime * result + ((getCreateBy() == null) ? 0 : getCreateBy().hashCode());
        result = prime * result + ((getCreateDate() == null) ? 0 : getCreateDate().hashCode());
        result = prime * result + ((getUpdateBy() == null) ? 0 : getUpdateBy().hashCode());
        result = prime * result + ((getUpdateDate() == null) ? 0 : getUpdateDate().hashCode());
        result = prime * result + ((getDeleteFlag() == null) ? 0 : getDeleteFlag().hashCode());
        result = prime * result + ((getBookmark() == null) ? 0 : getBookmark().hashCode());
        return result;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hd_bookmark
     *
     * @mbg.generated
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", bookmark=").append(bookmark);
        sb.append(", serialVersionUID=").append(serialVersionUID);
        sb.append("]");
        return sb.toString();
    }
}